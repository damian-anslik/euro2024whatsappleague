create table public.matches (
    id bigint generated by default as identity not null,
    created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    updated_at timestamp with time zone null default (now() AT TIME ZONE 'utc' :: text),
    show boolean not null default true,
    home_team_goals smallint null,
    away_team_goals smallint null,
    status text not null,
    home_team_name text not null,
    away_team_name text null,
    home_team_logo_url text not null,
    away_team_logo_url text not null,
    start_time timestamp with time zone not null default (now() AT TIME ZONE 'utc' :: text),
    can_users_place_bets boolean not null default true,
    league_id uuid not null,
    constraint matches_pkey primary key (id),
    constraint matches_league_id_fkey foreign KEY (league_id) references leagues (id) on update CASCADE on delete CASCADE
) TABLESPACE pg_default;

create trigger handle_updated_at BEFORE
update
    on matches for EACH row execute FUNCTION extensions.moddatetime ('updated_at');